/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.basistheory;

import com.basistheory.core.ClientOptions;
import com.basistheory.core.Suppliers;
import com.basistheory.resources.accountupdater.AccountUpdaterClient;
import com.basistheory.resources.applepay.ApplePayClient;
import com.basistheory.resources.applicationkeys.ApplicationKeysClient;
import com.basistheory.resources.applications.ApplicationsClient;
import com.basistheory.resources.applicationtemplates.ApplicationTemplatesClient;
import com.basistheory.resources.documents.DocumentsClient;
import com.basistheory.resources.enrichments.EnrichmentsClient;
import com.basistheory.resources.googlepay.GooglePayClient;
import com.basistheory.resources.keys.KeysClient;
import com.basistheory.resources.logs.LogsClient;
import com.basistheory.resources.networktokens.NetworkTokensClient;
import com.basistheory.resources.permissions.PermissionsClient;
import com.basistheory.resources.proxies.ProxiesClient;
import com.basistheory.resources.reactors.ReactorsClient;
import com.basistheory.resources.roles.RolesClient;
import com.basistheory.resources.sessions.SessionsClient;
import com.basistheory.resources.tenants.TenantsClient;
import com.basistheory.resources.threeds.ThreedsClient;
import com.basistheory.resources.tokenintents.TokenIntentsClient;
import com.basistheory.resources.tokens.TokensClient;
import com.basistheory.resources.webhooks.WebhooksClient;
import java.util.function.Supplier;

public class BasisTheoryApiClient {
    protected final ClientOptions clientOptions;

    protected final Supplier<ApplicationsClient> applicationsClient;

    protected final Supplier<ApplicationKeysClient> applicationKeysClient;

    protected final Supplier<ApplicationTemplatesClient> applicationTemplatesClient;

    protected final Supplier<ApplePayClient> applePayClient;

    protected final Supplier<GooglePayClient> googlePayClient;

    protected final Supplier<DocumentsClient> documentsClient;

    protected final Supplier<TokensClient> tokensClient;

    protected final Supplier<EnrichmentsClient> enrichmentsClient;

    protected final Supplier<KeysClient> keysClient;

    protected final Supplier<LogsClient> logsClient;

    protected final Supplier<NetworkTokensClient> networkTokensClient;

    protected final Supplier<PermissionsClient> permissionsClient;

    protected final Supplier<ProxiesClient> proxiesClient;

    protected final Supplier<ReactorsClient> reactorsClient;

    protected final Supplier<RolesClient> rolesClient;

    protected final Supplier<SessionsClient> sessionsClient;

    protected final Supplier<TokenIntentsClient> tokenIntentsClient;

    protected final Supplier<WebhooksClient> webhooksClient;

    protected final Supplier<AccountUpdaterClient> accountUpdaterClient;

    protected final Supplier<TenantsClient> tenantsClient;

    protected final Supplier<ThreedsClient> threedsClient;

    public BasisTheoryApiClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.applicationsClient = Suppliers.memoize(() -> new ApplicationsClient(clientOptions));
        this.applicationKeysClient = Suppliers.memoize(() -> new ApplicationKeysClient(clientOptions));
        this.applicationTemplatesClient = Suppliers.memoize(() -> new ApplicationTemplatesClient(clientOptions));
        this.applePayClient = Suppliers.memoize(() -> new ApplePayClient(clientOptions));
        this.googlePayClient = Suppliers.memoize(() -> new GooglePayClient(clientOptions));
        this.documentsClient = Suppliers.memoize(() -> new DocumentsClient(clientOptions));
        this.tokensClient = Suppliers.memoize(() -> new TokensClient(clientOptions));
        this.enrichmentsClient = Suppliers.memoize(() -> new EnrichmentsClient(clientOptions));
        this.keysClient = Suppliers.memoize(() -> new KeysClient(clientOptions));
        this.logsClient = Suppliers.memoize(() -> new LogsClient(clientOptions));
        this.networkTokensClient = Suppliers.memoize(() -> new NetworkTokensClient(clientOptions));
        this.permissionsClient = Suppliers.memoize(() -> new PermissionsClient(clientOptions));
        this.proxiesClient = Suppliers.memoize(() -> new ProxiesClient(clientOptions));
        this.reactorsClient = Suppliers.memoize(() -> new ReactorsClient(clientOptions));
        this.rolesClient = Suppliers.memoize(() -> new RolesClient(clientOptions));
        this.sessionsClient = Suppliers.memoize(() -> new SessionsClient(clientOptions));
        this.tokenIntentsClient = Suppliers.memoize(() -> new TokenIntentsClient(clientOptions));
        this.webhooksClient = Suppliers.memoize(() -> new WebhooksClient(clientOptions));
        this.accountUpdaterClient = Suppliers.memoize(() -> new AccountUpdaterClient(clientOptions));
        this.tenantsClient = Suppliers.memoize(() -> new TenantsClient(clientOptions));
        this.threedsClient = Suppliers.memoize(() -> new ThreedsClient(clientOptions));
    }

    public ApplicationsClient applications() {
        return this.applicationsClient.get();
    }

    public ApplicationKeysClient applicationKeys() {
        return this.applicationKeysClient.get();
    }

    public ApplicationTemplatesClient applicationTemplates() {
        return this.applicationTemplatesClient.get();
    }

    public ApplePayClient applePay() {
        return this.applePayClient.get();
    }

    public GooglePayClient googlePay() {
        return this.googlePayClient.get();
    }

    public DocumentsClient documents() {
        return this.documentsClient.get();
    }

    public TokensClient tokens() {
        return this.tokensClient.get();
    }

    public EnrichmentsClient enrichments() {
        return this.enrichmentsClient.get();
    }

    public KeysClient keys() {
        return this.keysClient.get();
    }

    public LogsClient logs() {
        return this.logsClient.get();
    }

    public NetworkTokensClient networkTokens() {
        return this.networkTokensClient.get();
    }

    public PermissionsClient permissions() {
        return this.permissionsClient.get();
    }

    public ProxiesClient proxies() {
        return this.proxiesClient.get();
    }

    public ReactorsClient reactors() {
        return this.reactorsClient.get();
    }

    public RolesClient roles() {
        return this.rolesClient.get();
    }

    public SessionsClient sessions() {
        return this.sessionsClient.get();
    }

    public TokenIntentsClient tokenIntents() {
        return this.tokenIntentsClient.get();
    }

    public WebhooksClient webhooks() {
        return this.webhooksClient.get();
    }

    public AccountUpdaterClient accountUpdater() {
        return this.accountUpdaterClient.get();
    }

    public TenantsClient tenants() {
        return this.tenantsClient.get();
    }

    public ThreedsClient threeds() {
        return this.threedsClient.get();
    }

    public static BasisTheoryApiClientBuilder builder() {
        return new BasisTheoryApiClientBuilder();
    }
}
