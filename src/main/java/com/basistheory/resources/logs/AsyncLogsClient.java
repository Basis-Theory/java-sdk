/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.basistheory.resources.logs;

import com.basistheory.core.ClientOptions;
import com.basistheory.core.RequestOptions;
import com.basistheory.core.pagination.SyncPagingIterable;
import com.basistheory.resources.logs.requests.LogsListRequest;
import com.basistheory.types.Log;
import com.basistheory.types.LogEntityType;
import java.util.List;
import java.util.concurrent.CompletableFuture;

public class AsyncLogsClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawLogsClient rawClient;

    public AsyncLogsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawLogsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawLogsClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<SyncPagingIterable<Log>> list() {
        return this.rawClient.list().thenApply(response -> response.body());
    }

    public CompletableFuture<SyncPagingIterable<Log>> list(LogsListRequest request) {
        return this.rawClient.list(request).thenApply(response -> response.body());
    }

    public CompletableFuture<SyncPagingIterable<Log>> list(LogsListRequest request, RequestOptions requestOptions) {
        return this.rawClient.list(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<List<LogEntityType>> getEntityTypes() {
        return this.rawClient.getEntityTypes().thenApply(response -> response.body());
    }

    public CompletableFuture<List<LogEntityType>> getEntityTypes(RequestOptions requestOptions) {
        return this.rawClient.getEntityTypes(requestOptions).thenApply(response -> response.body());
    }
}
