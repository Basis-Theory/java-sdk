/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.basistheory.resources.networktokens;

import com.basistheory.core.ClientOptions;
import com.basistheory.core.RequestOptions;
import com.basistheory.resources.networktokens.requests.CreateNetworkTokenRequest;
import com.basistheory.types.NetworkToken;
import com.basistheory.types.NetworkTokenCryptogram;
import java.util.concurrent.CompletableFuture;

public class AsyncNetworkTokensClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawNetworkTokensClient rawClient;

    public AsyncNetworkTokensClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawNetworkTokensClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawNetworkTokensClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<NetworkToken> create() {
        return this.rawClient.create().thenApply(response -> response.body());
    }

    public CompletableFuture<NetworkToken> create(CreateNetworkTokenRequest request) {
        return this.rawClient.create(request).thenApply(response -> response.body());
    }

    public CompletableFuture<NetworkToken> create(CreateNetworkTokenRequest request, RequestOptions requestOptions) {
        return this.rawClient.create(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<NetworkTokenCryptogram> cryptogram(String id) {
        return this.rawClient.cryptogram(id).thenApply(response -> response.body());
    }

    public CompletableFuture<NetworkTokenCryptogram> cryptogram(String id, RequestOptions requestOptions) {
        return this.rawClient.cryptogram(id, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<NetworkToken> get(String id) {
        return this.rawClient.get(id).thenApply(response -> response.body());
    }

    public CompletableFuture<NetworkToken> get(String id, RequestOptions requestOptions) {
        return this.rawClient.get(id, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Void> delete(String id) {
        return this.rawClient.delete(id).thenApply(response -> response.body());
    }

    public CompletableFuture<Void> delete(String id, RequestOptions requestOptions) {
        return this.rawClient.delete(id, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<NetworkToken> suspend(String id) {
        return this.rawClient.suspend(id).thenApply(response -> response.body());
    }

    public CompletableFuture<NetworkToken> suspend(String id, RequestOptions requestOptions) {
        return this.rawClient.suspend(id, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<NetworkToken> resume(String id) {
        return this.rawClient.resume(id).thenApply(response -> response.body());
    }

    public CompletableFuture<NetworkToken> resume(String id, RequestOptions requestOptions) {
        return this.rawClient.resume(id, requestOptions).thenApply(response -> response.body());
    }
}
