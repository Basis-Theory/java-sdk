/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.basistheory.resources.permissions;

import com.basistheory.core.ClientOptions;
import com.basistheory.core.RequestOptions;
import com.basistheory.resources.permissions.requests.PermissionsListRequest;
import com.basistheory.types.Permission;
import java.util.List;
import java.util.concurrent.CompletableFuture;

public class AsyncPermissionsClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawPermissionsClient rawClient;

    public AsyncPermissionsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawPermissionsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawPermissionsClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<List<Permission>> list() {
        return this.rawClient.list().thenApply(response -> response.body());
    }

    public CompletableFuture<List<Permission>> list(PermissionsListRequest request) {
        return this.rawClient.list(request).thenApply(response -> response.body());
    }

    public CompletableFuture<List<Permission>> list(PermissionsListRequest request, RequestOptions requestOptions) {
        return this.rawClient.list(request, requestOptions).thenApply(response -> response.body());
    }
}
