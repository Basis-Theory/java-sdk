/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.basistheory.resources.googlepay.requests;

import com.basistheory.core.ObjectMappers;
import com.basistheory.types.GooglePayMethodToken;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = GooglePayCreateRequest.Builder.class)
public final class GooglePayCreateRequest {
    private final Optional<String> expiresAt;

    private final Optional<GooglePayMethodToken> googlePaymentData;

    private final Map<String, Object> additionalProperties;

    private GooglePayCreateRequest(
            Optional<String> expiresAt,
            Optional<GooglePayMethodToken> googlePaymentData,
            Map<String, Object> additionalProperties) {
        this.expiresAt = expiresAt;
        this.googlePaymentData = googlePaymentData;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("expires_at")
    public Optional<String> getExpiresAt() {
        return expiresAt;
    }

    @JsonProperty("google_payment_data")
    public Optional<GooglePayMethodToken> getGooglePaymentData() {
        return googlePaymentData;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof GooglePayCreateRequest && equalTo((GooglePayCreateRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(GooglePayCreateRequest other) {
        return expiresAt.equals(other.expiresAt) && googlePaymentData.equals(other.googlePaymentData);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.expiresAt, this.googlePaymentData);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> expiresAt = Optional.empty();

        private Optional<GooglePayMethodToken> googlePaymentData = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(GooglePayCreateRequest other) {
            expiresAt(other.getExpiresAt());
            googlePaymentData(other.getGooglePaymentData());
            return this;
        }

        @JsonSetter(value = "expires_at", nulls = Nulls.SKIP)
        public Builder expiresAt(Optional<String> expiresAt) {
            this.expiresAt = expiresAt;
            return this;
        }

        public Builder expiresAt(String expiresAt) {
            this.expiresAt = Optional.ofNullable(expiresAt);
            return this;
        }

        @JsonSetter(value = "google_payment_data", nulls = Nulls.SKIP)
        public Builder googlePaymentData(Optional<GooglePayMethodToken> googlePaymentData) {
            this.googlePaymentData = googlePaymentData;
            return this;
        }

        public Builder googlePaymentData(GooglePayMethodToken googlePaymentData) {
            this.googlePaymentData = Optional.ofNullable(googlePaymentData);
            return this;
        }

        public GooglePayCreateRequest build() {
            return new GooglePayCreateRequest(expiresAt, googlePaymentData, additionalProperties);
        }
    }
}
