/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.basistheory.resources.googlepay;

import com.basistheory.core.ClientOptions;
import com.basistheory.core.RequestOptions;
import com.basistheory.resources.googlepay.requests.GooglePayTokenizeRequest;
import com.basistheory.types.GooglePayTokenizeResponse;
import java.util.concurrent.CompletableFuture;

public class AsyncGooglepayClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawGooglepayClient rawClient;

    public AsyncGooglepayClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawGooglepayClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawGooglepayClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<GooglePayTokenizeResponse> tokenize() {
        return this.rawClient.tokenize().thenApply(response -> response.body());
    }

    public CompletableFuture<GooglePayTokenizeResponse> tokenize(GooglePayTokenizeRequest request) {
        return this.rawClient.tokenize(request).thenApply(response -> response.body());
    }

    public CompletableFuture<GooglePayTokenizeResponse> tokenize(
            GooglePayTokenizeRequest request, RequestOptions requestOptions) {
        return this.rawClient.tokenize(request, requestOptions).thenApply(response -> response.body());
    }
}
