/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.basistheory.resources.keys;

import com.basistheory.core.ClientOptions;
import com.basistheory.core.RequestOptions;
import com.basistheory.resources.keys.requests.ClientEncryptionKeyRequest;
import com.basistheory.types.ClientEncryptionKeyMetadataResponse;
import com.basistheory.types.ClientEncryptionKeyResponse;
import java.util.List;
import java.util.concurrent.CompletableFuture;

public class AsyncKeysClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawKeysClient rawClient;

    public AsyncKeysClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawKeysClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawKeysClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<List<ClientEncryptionKeyMetadataResponse>> list() {
        return this.rawClient.list().thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientEncryptionKeyMetadataResponse>> list(RequestOptions requestOptions) {
        return this.rawClient.list(requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<ClientEncryptionKeyResponse> create() {
        return this.rawClient.create().thenApply(response -> response.body());
    }

    public CompletableFuture<ClientEncryptionKeyResponse> create(ClientEncryptionKeyRequest request) {
        return this.rawClient.create(request).thenApply(response -> response.body());
    }

    public CompletableFuture<ClientEncryptionKeyResponse> create(
            ClientEncryptionKeyRequest request, RequestOptions requestOptions) {
        return this.rawClient.create(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<ClientEncryptionKeyMetadataResponse> get(String id) {
        return this.rawClient.get(id).thenApply(response -> response.body());
    }

    public CompletableFuture<ClientEncryptionKeyMetadataResponse> get(String id, RequestOptions requestOptions) {
        return this.rawClient.get(id, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Void> delete(String id) {
        return this.rawClient.delete(id).thenApply(response -> response.body());
    }

    public CompletableFuture<Void> delete(String id, RequestOptions requestOptions) {
        return this.rawClient.delete(id, requestOptions).thenApply(response -> response.body());
    }
}
