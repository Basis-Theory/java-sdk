/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.basistheory.resources.tenants.invitations;

import com.basistheory.core.ClientOptions;
import com.basistheory.core.IdempotentRequestOptions;
import com.basistheory.core.RequestOptions;
import com.basistheory.core.pagination.SyncPagingIterable;
import com.basistheory.resources.tenants.invitations.requests.CreateTenantInvitationRequest;
import com.basistheory.resources.tenants.invitations.requests.InvitationsListRequest;
import com.basistheory.types.TenantInvitationResponse;

public class InvitationsClient {
    protected final ClientOptions clientOptions;

    private final RawInvitationsClient rawClient;

    public InvitationsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawInvitationsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawInvitationsClient withRawResponse() {
        return this.rawClient;
    }

    public SyncPagingIterable<TenantInvitationResponse> list() {
        return this.rawClient.list().body();
    }

    public SyncPagingIterable<TenantInvitationResponse> list(InvitationsListRequest request) {
        return this.rawClient.list(request).body();
    }

    public SyncPagingIterable<TenantInvitationResponse> list(
            InvitationsListRequest request, RequestOptions requestOptions) {
        return this.rawClient.list(request, requestOptions).body();
    }

    public TenantInvitationResponse create(CreateTenantInvitationRequest request) {
        return this.rawClient.create(request).body();
    }

    public TenantInvitationResponse create(
            CreateTenantInvitationRequest request, IdempotentRequestOptions requestOptions) {
        return this.rawClient.create(request, requestOptions).body();
    }

    public TenantInvitationResponse resend(String invitationId) {
        return this.rawClient.resend(invitationId).body();
    }

    public TenantInvitationResponse resend(String invitationId, IdempotentRequestOptions requestOptions) {
        return this.rawClient.resend(invitationId, requestOptions).body();
    }

    public TenantInvitationResponse get(String invitationId) {
        return this.rawClient.get(invitationId).body();
    }

    public TenantInvitationResponse get(String invitationId, RequestOptions requestOptions) {
        return this.rawClient.get(invitationId, requestOptions).body();
    }

    public void delete(String invitationId) {
        this.rawClient.delete(invitationId).body();
    }

    public void delete(String invitationId, RequestOptions requestOptions) {
        this.rawClient.delete(invitationId, requestOptions).body();
    }
}
