/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.basistheory.resources.tenants.self;

import com.basistheory.core.ClientOptions;
import com.basistheory.core.IdempotentRequestOptions;
import com.basistheory.core.RequestOptions;
import com.basistheory.resources.tenants.self.requests.UpdateTenantRequest;
import com.basistheory.types.Tenant;
import com.basistheory.types.TenantUsageReport;

public class SelfClient {
    protected final ClientOptions clientOptions;

    private final RawSelfClient rawClient;

    public SelfClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawSelfClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawSelfClient withRawResponse() {
        return this.rawClient;
    }

    public TenantUsageReport getUsageReports() {
        return this.rawClient.getUsageReports().body();
    }

    public TenantUsageReport getUsageReports(RequestOptions requestOptions) {
        return this.rawClient.getUsageReports(requestOptions).body();
    }

    public Tenant get() {
        return this.rawClient.get().body();
    }

    public Tenant get(RequestOptions requestOptions) {
        return this.rawClient.get(requestOptions).body();
    }

    public Tenant update(UpdateTenantRequest request) {
        return this.rawClient.update(request).body();
    }

    public Tenant update(UpdateTenantRequest request, IdempotentRequestOptions requestOptions) {
        return this.rawClient.update(request, requestOptions).body();
    }

    public void delete() {
        this.rawClient.delete().body();
    }

    public void delete(RequestOptions requestOptions) {
        this.rawClient.delete(requestOptions).body();
    }
}
