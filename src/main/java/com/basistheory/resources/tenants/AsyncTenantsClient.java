/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.basistheory.resources.tenants;

import com.basistheory.core.ClientOptions;
import com.basistheory.core.Suppliers;
import com.basistheory.resources.tenants.connections.AsyncConnectionsClient;
import com.basistheory.resources.tenants.invitations.AsyncInvitationsClient;
import com.basistheory.resources.tenants.members.AsyncMembersClient;
import com.basistheory.resources.tenants.owner.AsyncOwnerClient;
import com.basistheory.resources.tenants.self.AsyncSelfClient;
import java.util.function.Supplier;

public class AsyncTenantsClient {
    protected final ClientOptions clientOptions;

    protected final Supplier<AsyncConnectionsClient> connectionsClient;

    protected final Supplier<AsyncInvitationsClient> invitationsClient;

    protected final Supplier<AsyncMembersClient> membersClient;

    protected final Supplier<AsyncOwnerClient> ownerClient;

    protected final Supplier<AsyncSelfClient> selfClient;

    public AsyncTenantsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.connectionsClient = Suppliers.memoize(() -> new AsyncConnectionsClient(clientOptions));
        this.invitationsClient = Suppliers.memoize(() -> new AsyncInvitationsClient(clientOptions));
        this.membersClient = Suppliers.memoize(() -> new AsyncMembersClient(clientOptions));
        this.ownerClient = Suppliers.memoize(() -> new AsyncOwnerClient(clientOptions));
        this.selfClient = Suppliers.memoize(() -> new AsyncSelfClient(clientOptions));
    }

    public AsyncConnectionsClient connections() {
        return this.connectionsClient.get();
    }

    public AsyncInvitationsClient invitations() {
        return this.invitationsClient.get();
    }

    public AsyncMembersClient members() {
        return this.membersClient.get();
    }

    public AsyncOwnerClient owner() {
        return this.ownerClient.get();
    }

    public AsyncSelfClient self() {
        return this.selfClient.get();
    }
}
