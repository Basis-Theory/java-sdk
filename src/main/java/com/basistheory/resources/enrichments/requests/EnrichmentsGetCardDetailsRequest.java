/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.basistheory.resources.enrichments.requests;

import com.basistheory.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = EnrichmentsGetCardDetailsRequest.Builder.class)
public final class EnrichmentsGetCardDetailsRequest {
    private final String bin;

    private final Map<String, Object> additionalProperties;

    private EnrichmentsGetCardDetailsRequest(String bin, Map<String, Object> additionalProperties) {
        this.bin = bin;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("bin")
    public String getBin() {
        return bin;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof EnrichmentsGetCardDetailsRequest && equalTo((EnrichmentsGetCardDetailsRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(EnrichmentsGetCardDetailsRequest other) {
        return bin.equals(other.bin);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.bin);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static BinStage builder() {
        return new Builder();
    }

    public interface BinStage {
        _FinalStage bin(@NotNull String bin);

        Builder from(EnrichmentsGetCardDetailsRequest other);
    }

    public interface _FinalStage {
        EnrichmentsGetCardDetailsRequest build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements BinStage, _FinalStage {
        private String bin;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(EnrichmentsGetCardDetailsRequest other) {
            bin(other.getBin());
            return this;
        }

        @java.lang.Override
        @JsonSetter("bin")
        public _FinalStage bin(@NotNull String bin) {
            this.bin = Objects.requireNonNull(bin, "bin must not be null");
            return this;
        }

        @java.lang.Override
        public EnrichmentsGetCardDetailsRequest build() {
            return new EnrichmentsGetCardDetailsRequest(bin, additionalProperties);
        }
    }
}
