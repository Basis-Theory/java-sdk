/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.basistheory.resources.applications;

import com.basistheory.core.ClientOptions;
import com.basistheory.core.IdempotentRequestOptions;
import com.basistheory.core.RequestOptions;
import com.basistheory.core.pagination.SyncPagingIterable;
import com.basistheory.resources.applications.requests.ApplicationsListRequest;
import com.basistheory.resources.applications.requests.CreateApplicationRequest;
import com.basistheory.resources.applications.requests.UpdateApplicationRequest;
import com.basistheory.types.Application;
import java.util.concurrent.CompletableFuture;

public class AsyncApplicationsClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawApplicationsClient rawClient;

    public AsyncApplicationsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawApplicationsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawApplicationsClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<SyncPagingIterable<Application>> list() {
        return this.rawClient.list().thenApply(response -> response.body());
    }

    public CompletableFuture<SyncPagingIterable<Application>> list(ApplicationsListRequest request) {
        return this.rawClient.list(request).thenApply(response -> response.body());
    }

    public CompletableFuture<SyncPagingIterable<Application>> list(
            ApplicationsListRequest request, RequestOptions requestOptions) {
        return this.rawClient.list(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Application> create(CreateApplicationRequest request) {
        return this.rawClient.create(request).thenApply(response -> response.body());
    }

    public CompletableFuture<Application> create(
            CreateApplicationRequest request, IdempotentRequestOptions requestOptions) {
        return this.rawClient.create(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Application> get(String id) {
        return this.rawClient.get(id).thenApply(response -> response.body());
    }

    public CompletableFuture<Application> get(String id, RequestOptions requestOptions) {
        return this.rawClient.get(id, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Application> update(String id, UpdateApplicationRequest request) {
        return this.rawClient.update(id, request).thenApply(response -> response.body());
    }

    public CompletableFuture<Application> update(
            String id, UpdateApplicationRequest request, IdempotentRequestOptions requestOptions) {
        return this.rawClient.update(id, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Void> delete(String id) {
        return this.rawClient.delete(id).thenApply(response -> response.body());
    }

    public CompletableFuture<Void> delete(String id, RequestOptions requestOptions) {
        return this.rawClient.delete(id, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Application> getByKey() {
        return this.rawClient.getByKey().thenApply(response -> response.body());
    }

    public CompletableFuture<Application> getByKey(RequestOptions requestOptions) {
        return this.rawClient.getByKey(requestOptions).thenApply(response -> response.body());
    }
}
