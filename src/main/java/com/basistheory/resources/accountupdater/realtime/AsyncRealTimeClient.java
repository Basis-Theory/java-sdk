/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.basistheory.resources.accountupdater.realtime;

import com.basistheory.core.ClientOptions;
import com.basistheory.core.RequestOptions;
import com.basistheory.resources.accountupdater.realtime.requests.AccountUpdaterRealTimeRequest;
import com.basistheory.types.AccountUpdaterRealTimeResponse;
import java.util.concurrent.CompletableFuture;

public class AsyncRealTimeClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawRealTimeClient rawClient;

    public AsyncRealTimeClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawRealTimeClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawRealTimeClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Returns the update result
     */
    public CompletableFuture<AccountUpdaterRealTimeResponse> invoke(AccountUpdaterRealTimeRequest request) {
        return this.rawClient.invoke(request).thenApply(response -> response.body());
    }

    /**
     * Returns the update result
     */
    public CompletableFuture<AccountUpdaterRealTimeResponse> invoke(
            AccountUpdaterRealTimeRequest request, RequestOptions requestOptions) {
        return this.rawClient.invoke(request, requestOptions).thenApply(response -> response.body());
    }
}
