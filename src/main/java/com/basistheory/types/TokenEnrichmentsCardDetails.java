/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.basistheory.types;

import com.basistheory.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = TokenEnrichmentsCardDetails.Builder.class)
public final class TokenEnrichmentsCardDetails {
    private final Optional<String> bin;

    private final Optional<String> last4;

    private final Map<String, Object> additionalProperties;

    private TokenEnrichmentsCardDetails(
            Optional<String> bin, Optional<String> last4, Map<String, Object> additionalProperties) {
        this.bin = bin;
        this.last4 = last4;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("bin")
    public Optional<String> getBin() {
        return bin;
    }

    @JsonProperty("last4")
    public Optional<String> getLast4() {
        return last4;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof TokenEnrichmentsCardDetails && equalTo((TokenEnrichmentsCardDetails) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(TokenEnrichmentsCardDetails other) {
        return bin.equals(other.bin) && last4.equals(other.last4);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.bin, this.last4);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> bin = Optional.empty();

        private Optional<String> last4 = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(TokenEnrichmentsCardDetails other) {
            bin(other.getBin());
            last4(other.getLast4());
            return this;
        }

        @JsonSetter(value = "bin", nulls = Nulls.SKIP)
        public Builder bin(Optional<String> bin) {
            this.bin = bin;
            return this;
        }

        public Builder bin(String bin) {
            this.bin = Optional.ofNullable(bin);
            return this;
        }

        @JsonSetter(value = "last4", nulls = Nulls.SKIP)
        public Builder last4(Optional<String> last4) {
            this.last4 = last4;
            return this;
        }

        public Builder last4(String last4) {
            this.last4 = Optional.ofNullable(last4);
            return this;
        }

        public TokenEnrichmentsCardDetails build() {
            return new TokenEnrichmentsCardDetails(bin, last4, additionalProperties);
        }
    }
}
