/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.basistheory.types;

import com.basistheory.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ThreeDsRequestorInfo.Builder.class)
public final class ThreeDsRequestorInfo {
    private final Optional<String> id;

    private final Optional<String> name;

    private final Optional<String> url;

    private final Optional<String> discoverClientId;

    private final Optional<String> discoverRequestorId;

    private final Optional<String> amexRequestorType;

    private final Optional<String> cbSiretNumber;

    private final Map<String, Object> additionalProperties;

    private ThreeDsRequestorInfo(
            Optional<String> id,
            Optional<String> name,
            Optional<String> url,
            Optional<String> discoverClientId,
            Optional<String> discoverRequestorId,
            Optional<String> amexRequestorType,
            Optional<String> cbSiretNumber,
            Map<String, Object> additionalProperties) {
        this.id = id;
        this.name = name;
        this.url = url;
        this.discoverClientId = discoverClientId;
        this.discoverRequestorId = discoverRequestorId;
        this.amexRequestorType = amexRequestorType;
        this.cbSiretNumber = cbSiretNumber;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("id")
    public Optional<String> getId() {
        return id;
    }

    @JsonProperty("name")
    public Optional<String> getName() {
        return name;
    }

    @JsonProperty("url")
    public Optional<String> getUrl() {
        return url;
    }

    @JsonProperty("discover_client_id")
    public Optional<String> getDiscoverClientId() {
        return discoverClientId;
    }

    @JsonProperty("discover_requestor_id")
    public Optional<String> getDiscoverRequestorId() {
        return discoverRequestorId;
    }

    @JsonProperty("amex_requestor_type")
    public Optional<String> getAmexRequestorType() {
        return amexRequestorType;
    }

    @JsonProperty("cb_siret_number")
    public Optional<String> getCbSiretNumber() {
        return cbSiretNumber;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ThreeDsRequestorInfo && equalTo((ThreeDsRequestorInfo) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ThreeDsRequestorInfo other) {
        return id.equals(other.id)
                && name.equals(other.name)
                && url.equals(other.url)
                && discoverClientId.equals(other.discoverClientId)
                && discoverRequestorId.equals(other.discoverRequestorId)
                && amexRequestorType.equals(other.amexRequestorType)
                && cbSiretNumber.equals(other.cbSiretNumber);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.id,
                this.name,
                this.url,
                this.discoverClientId,
                this.discoverRequestorId,
                this.amexRequestorType,
                this.cbSiretNumber);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> id = Optional.empty();

        private Optional<String> name = Optional.empty();

        private Optional<String> url = Optional.empty();

        private Optional<String> discoverClientId = Optional.empty();

        private Optional<String> discoverRequestorId = Optional.empty();

        private Optional<String> amexRequestorType = Optional.empty();

        private Optional<String> cbSiretNumber = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(ThreeDsRequestorInfo other) {
            id(other.getId());
            name(other.getName());
            url(other.getUrl());
            discoverClientId(other.getDiscoverClientId());
            discoverRequestorId(other.getDiscoverRequestorId());
            amexRequestorType(other.getAmexRequestorType());
            cbSiretNumber(other.getCbSiretNumber());
            return this;
        }

        @JsonSetter(value = "id", nulls = Nulls.SKIP)
        public Builder id(Optional<String> id) {
            this.id = id;
            return this;
        }

        public Builder id(String id) {
            this.id = Optional.ofNullable(id);
            return this;
        }

        @JsonSetter(value = "name", nulls = Nulls.SKIP)
        public Builder name(Optional<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(String name) {
            this.name = Optional.ofNullable(name);
            return this;
        }

        @JsonSetter(value = "url", nulls = Nulls.SKIP)
        public Builder url(Optional<String> url) {
            this.url = url;
            return this;
        }

        public Builder url(String url) {
            this.url = Optional.ofNullable(url);
            return this;
        }

        @JsonSetter(value = "discover_client_id", nulls = Nulls.SKIP)
        public Builder discoverClientId(Optional<String> discoverClientId) {
            this.discoverClientId = discoverClientId;
            return this;
        }

        public Builder discoverClientId(String discoverClientId) {
            this.discoverClientId = Optional.ofNullable(discoverClientId);
            return this;
        }

        @JsonSetter(value = "discover_requestor_id", nulls = Nulls.SKIP)
        public Builder discoverRequestorId(Optional<String> discoverRequestorId) {
            this.discoverRequestorId = discoverRequestorId;
            return this;
        }

        public Builder discoverRequestorId(String discoverRequestorId) {
            this.discoverRequestorId = Optional.ofNullable(discoverRequestorId);
            return this;
        }

        @JsonSetter(value = "amex_requestor_type", nulls = Nulls.SKIP)
        public Builder amexRequestorType(Optional<String> amexRequestorType) {
            this.amexRequestorType = amexRequestorType;
            return this;
        }

        public Builder amexRequestorType(String amexRequestorType) {
            this.amexRequestorType = Optional.ofNullable(amexRequestorType);
            return this;
        }

        @JsonSetter(value = "cb_siret_number", nulls = Nulls.SKIP)
        public Builder cbSiretNumber(Optional<String> cbSiretNumber) {
            this.cbSiretNumber = cbSiretNumber;
            return this;
        }

        public Builder cbSiretNumber(String cbSiretNumber) {
            this.cbSiretNumber = Optional.ofNullable(cbSiretNumber);
            return this;
        }

        public ThreeDsRequestorInfo build() {
            return new ThreeDsRequestorInfo(
                    id,
                    name,
                    url,
                    discoverClientId,
                    discoverRequestorId,
                    amexRequestorType,
                    cbSiretNumber,
                    additionalProperties);
        }
    }
}
