/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.basistheory.types;

import com.basistheory.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ThreeDsCallbackUrls.Builder.class)
public final class ThreeDsCallbackUrls {
    private final Optional<String> success;

    private final Optional<String> failure;

    private final Map<String, Object> additionalProperties;

    private ThreeDsCallbackUrls(
            Optional<String> success, Optional<String> failure, Map<String, Object> additionalProperties) {
        this.success = success;
        this.failure = failure;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("success")
    public Optional<String> getSuccess() {
        return success;
    }

    @JsonProperty("failure")
    public Optional<String> getFailure() {
        return failure;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ThreeDsCallbackUrls && equalTo((ThreeDsCallbackUrls) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ThreeDsCallbackUrls other) {
        return success.equals(other.success) && failure.equals(other.failure);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.success, this.failure);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> success = Optional.empty();

        private Optional<String> failure = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(ThreeDsCallbackUrls other) {
            success(other.getSuccess());
            failure(other.getFailure());
            return this;
        }

        @JsonSetter(value = "success", nulls = Nulls.SKIP)
        public Builder success(Optional<String> success) {
            this.success = success;
            return this;
        }

        public Builder success(String success) {
            this.success = Optional.ofNullable(success);
            return this;
        }

        @JsonSetter(value = "failure", nulls = Nulls.SKIP)
        public Builder failure(Optional<String> failure) {
            this.failure = failure;
            return this;
        }

        public Builder failure(String failure) {
            this.failure = Optional.ofNullable(failure);
            return this;
        }

        public ThreeDsCallbackUrls build() {
            return new ThreeDsCallbackUrls(success, failure, additionalProperties);
        }
    }
}
