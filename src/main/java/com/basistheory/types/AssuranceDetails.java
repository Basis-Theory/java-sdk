/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.basistheory.types;

import com.basistheory.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = AssuranceDetails.Builder.class)
public final class AssuranceDetails {
    private final Optional<Boolean> accountVerified;

    private final Optional<Boolean> cardHolderAuthenticated;

    private final Map<String, Object> additionalProperties;

    private AssuranceDetails(
            Optional<Boolean> accountVerified,
            Optional<Boolean> cardHolderAuthenticated,
            Map<String, Object> additionalProperties) {
        this.accountVerified = accountVerified;
        this.cardHolderAuthenticated = cardHolderAuthenticated;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("account_verified")
    public Optional<Boolean> getAccountVerified() {
        return accountVerified;
    }

    @JsonProperty("card_holder_authenticated")
    public Optional<Boolean> getCardHolderAuthenticated() {
        return cardHolderAuthenticated;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof AssuranceDetails && equalTo((AssuranceDetails) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(AssuranceDetails other) {
        return accountVerified.equals(other.accountVerified)
                && cardHolderAuthenticated.equals(other.cardHolderAuthenticated);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.accountVerified, this.cardHolderAuthenticated);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<Boolean> accountVerified = Optional.empty();

        private Optional<Boolean> cardHolderAuthenticated = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(AssuranceDetails other) {
            accountVerified(other.getAccountVerified());
            cardHolderAuthenticated(other.getCardHolderAuthenticated());
            return this;
        }

        @JsonSetter(value = "account_verified", nulls = Nulls.SKIP)
        public Builder accountVerified(Optional<Boolean> accountVerified) {
            this.accountVerified = accountVerified;
            return this;
        }

        public Builder accountVerified(Boolean accountVerified) {
            this.accountVerified = Optional.ofNullable(accountVerified);
            return this;
        }

        @JsonSetter(value = "card_holder_authenticated", nulls = Nulls.SKIP)
        public Builder cardHolderAuthenticated(Optional<Boolean> cardHolderAuthenticated) {
            this.cardHolderAuthenticated = cardHolderAuthenticated;
            return this;
        }

        public Builder cardHolderAuthenticated(Boolean cardHolderAuthenticated) {
            this.cardHolderAuthenticated = Optional.ofNullable(cardHolderAuthenticated);
            return this;
        }

        public AssuranceDetails build() {
            return new AssuranceDetails(accountVerified, cardHolderAuthenticated, additionalProperties);
        }
    }
}
