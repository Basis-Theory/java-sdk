/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.basis.theory.api.resources.tokens.requests;

import com.basis.theory.api.core.ObjectMappers;
import com.basis.theory.api.types.Privacy;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CreateTokenRequest.Builder.class)
public final class CreateTokenRequest {
    private final Optional<String> id;

    private final Optional<String> type;

    private final Object data;

    private final Optional<Privacy> privacy;

    private final Optional<Map<String, Optional<String>>> metadata;

    private final Optional<List<String>> searchIndexes;

    private final Optional<String> fingerprintExpression;

    private final Optional<Object> mask;

    private final Optional<Boolean> deduplicateToken;

    private final Optional<String> expiresAt;

    private final Optional<List<String>> containers;

    private final Map<String, Object> additionalProperties;

    private CreateTokenRequest(
            Optional<String> id,
            Optional<String> type,
            Object data,
            Optional<Privacy> privacy,
            Optional<Map<String, Optional<String>>> metadata,
            Optional<List<String>> searchIndexes,
            Optional<String> fingerprintExpression,
            Optional<Object> mask,
            Optional<Boolean> deduplicateToken,
            Optional<String> expiresAt,
            Optional<List<String>> containers,
            Map<String, Object> additionalProperties) {
        this.id = id;
        this.type = type;
        this.data = data;
        this.privacy = privacy;
        this.metadata = metadata;
        this.searchIndexes = searchIndexes;
        this.fingerprintExpression = fingerprintExpression;
        this.mask = mask;
        this.deduplicateToken = deduplicateToken;
        this.expiresAt = expiresAt;
        this.containers = containers;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("id")
    public Optional<String> getId() {
        return id;
    }

    @JsonProperty("type")
    public Optional<String> getType() {
        return type;
    }

    @JsonProperty("data")
    public Object getData() {
        return data;
    }

    @JsonProperty("privacy")
    public Optional<Privacy> getPrivacy() {
        return privacy;
    }

    @JsonProperty("metadata")
    public Optional<Map<String, Optional<String>>> getMetadata() {
        return metadata;
    }

    @JsonProperty("search_indexes")
    public Optional<List<String>> getSearchIndexes() {
        return searchIndexes;
    }

    @JsonProperty("fingerprint_expression")
    public Optional<String> getFingerprintExpression() {
        return fingerprintExpression;
    }

    @JsonProperty("mask")
    public Optional<Object> getMask() {
        return mask;
    }

    @JsonProperty("deduplicate_token")
    public Optional<Boolean> getDeduplicateToken() {
        return deduplicateToken;
    }

    @JsonProperty("expires_at")
    public Optional<String> getExpiresAt() {
        return expiresAt;
    }

    @JsonProperty("containers")
    public Optional<List<String>> getContainers() {
        return containers;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CreateTokenRequest && equalTo((CreateTokenRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CreateTokenRequest other) {
        return id.equals(other.id)
                && type.equals(other.type)
                && data.equals(other.data)
                && privacy.equals(other.privacy)
                && metadata.equals(other.metadata)
                && searchIndexes.equals(other.searchIndexes)
                && fingerprintExpression.equals(other.fingerprintExpression)
                && mask.equals(other.mask)
                && deduplicateToken.equals(other.deduplicateToken)
                && expiresAt.equals(other.expiresAt)
                && containers.equals(other.containers);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.id,
                this.type,
                this.data,
                this.privacy,
                this.metadata,
                this.searchIndexes,
                this.fingerprintExpression,
                this.mask,
                this.deduplicateToken,
                this.expiresAt,
                this.containers);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static DataStage builder() {
        return new Builder();
    }

    public interface DataStage {
        _FinalStage data(Object data);

        Builder from(CreateTokenRequest other);
    }

    public interface _FinalStage {
        CreateTokenRequest build();

        _FinalStage id(Optional<String> id);

        _FinalStage id(String id);

        _FinalStage type(Optional<String> type);

        _FinalStage type(String type);

        _FinalStage privacy(Optional<Privacy> privacy);

        _FinalStage privacy(Privacy privacy);

        _FinalStage metadata(Optional<Map<String, Optional<String>>> metadata);

        _FinalStage metadata(Map<String, Optional<String>> metadata);

        _FinalStage searchIndexes(Optional<List<String>> searchIndexes);

        _FinalStage searchIndexes(List<String> searchIndexes);

        _FinalStage fingerprintExpression(Optional<String> fingerprintExpression);

        _FinalStage fingerprintExpression(String fingerprintExpression);

        _FinalStage mask(Optional<Object> mask);

        _FinalStage mask(Object mask);

        _FinalStage deduplicateToken(Optional<Boolean> deduplicateToken);

        _FinalStage deduplicateToken(Boolean deduplicateToken);

        _FinalStage expiresAt(Optional<String> expiresAt);

        _FinalStage expiresAt(String expiresAt);

        _FinalStage containers(Optional<List<String>> containers);

        _FinalStage containers(List<String> containers);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements DataStage, _FinalStage {
        private Object data;

        private Optional<List<String>> containers = Optional.empty();

        private Optional<String> expiresAt = Optional.empty();

        private Optional<Boolean> deduplicateToken = Optional.empty();

        private Optional<Object> mask = Optional.empty();

        private Optional<String> fingerprintExpression = Optional.empty();

        private Optional<List<String>> searchIndexes = Optional.empty();

        private Optional<Map<String, Optional<String>>> metadata = Optional.empty();

        private Optional<Privacy> privacy = Optional.empty();

        private Optional<String> type = Optional.empty();

        private Optional<String> id = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(CreateTokenRequest other) {
            id(other.getId());
            type(other.getType());
            data(other.getData());
            privacy(other.getPrivacy());
            metadata(other.getMetadata());
            searchIndexes(other.getSearchIndexes());
            fingerprintExpression(other.getFingerprintExpression());
            mask(other.getMask());
            deduplicateToken(other.getDeduplicateToken());
            expiresAt(other.getExpiresAt());
            containers(other.getContainers());
            return this;
        }

        @java.lang.Override
        @JsonSetter("data")
        public _FinalStage data(Object data) {
            this.data = data;
            return this;
        }

        @java.lang.Override
        public _FinalStage containers(List<String> containers) {
            this.containers = Optional.ofNullable(containers);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "containers", nulls = Nulls.SKIP)
        public _FinalStage containers(Optional<List<String>> containers) {
            this.containers = containers;
            return this;
        }

        @java.lang.Override
        public _FinalStage expiresAt(String expiresAt) {
            this.expiresAt = Optional.ofNullable(expiresAt);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "expires_at", nulls = Nulls.SKIP)
        public _FinalStage expiresAt(Optional<String> expiresAt) {
            this.expiresAt = expiresAt;
            return this;
        }

        @java.lang.Override
        public _FinalStage deduplicateToken(Boolean deduplicateToken) {
            this.deduplicateToken = Optional.ofNullable(deduplicateToken);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "deduplicate_token", nulls = Nulls.SKIP)
        public _FinalStage deduplicateToken(Optional<Boolean> deduplicateToken) {
            this.deduplicateToken = deduplicateToken;
            return this;
        }

        @java.lang.Override
        public _FinalStage mask(Object mask) {
            this.mask = Optional.ofNullable(mask);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "mask", nulls = Nulls.SKIP)
        public _FinalStage mask(Optional<Object> mask) {
            this.mask = mask;
            return this;
        }

        @java.lang.Override
        public _FinalStage fingerprintExpression(String fingerprintExpression) {
            this.fingerprintExpression = Optional.ofNullable(fingerprintExpression);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "fingerprint_expression", nulls = Nulls.SKIP)
        public _FinalStage fingerprintExpression(Optional<String> fingerprintExpression) {
            this.fingerprintExpression = fingerprintExpression;
            return this;
        }

        @java.lang.Override
        public _FinalStage searchIndexes(List<String> searchIndexes) {
            this.searchIndexes = Optional.ofNullable(searchIndexes);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "search_indexes", nulls = Nulls.SKIP)
        public _FinalStage searchIndexes(Optional<List<String>> searchIndexes) {
            this.searchIndexes = searchIndexes;
            return this;
        }

        @java.lang.Override
        public _FinalStage metadata(Map<String, Optional<String>> metadata) {
            this.metadata = Optional.ofNullable(metadata);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "metadata", nulls = Nulls.SKIP)
        public _FinalStage metadata(Optional<Map<String, Optional<String>>> metadata) {
            this.metadata = metadata;
            return this;
        }

        @java.lang.Override
        public _FinalStage privacy(Privacy privacy) {
            this.privacy = Optional.ofNullable(privacy);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "privacy", nulls = Nulls.SKIP)
        public _FinalStage privacy(Optional<Privacy> privacy) {
            this.privacy = privacy;
            return this;
        }

        @java.lang.Override
        public _FinalStage type(String type) {
            this.type = Optional.ofNullable(type);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "type", nulls = Nulls.SKIP)
        public _FinalStage type(Optional<String> type) {
            this.type = type;
            return this;
        }

        @java.lang.Override
        public _FinalStage id(String id) {
            this.id = Optional.ofNullable(id);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "id", nulls = Nulls.SKIP)
        public _FinalStage id(Optional<String> id) {
            this.id = id;
            return this;
        }

        @java.lang.Override
        public CreateTokenRequest build() {
            return new CreateTokenRequest(
                    id,
                    type,
                    data,
                    privacy,
                    metadata,
                    searchIndexes,
                    fingerprintExpression,
                    mask,
                    deduplicateToken,
                    expiresAt,
                    containers,
                    additionalProperties);
        }
    }
}
