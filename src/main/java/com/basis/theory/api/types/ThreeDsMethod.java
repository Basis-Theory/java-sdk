/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.basis.theory.api.types;

import com.basis.theory.api.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ThreeDsMethod.Builder.class)
public final class ThreeDsMethod {
    private final Optional<String> methodUrl;

    private final Optional<String> methodCompletionIndicator;

    private final Map<String, Object> additionalProperties;

    private ThreeDsMethod(
            Optional<String> methodUrl,
            Optional<String> methodCompletionIndicator,
            Map<String, Object> additionalProperties) {
        this.methodUrl = methodUrl;
        this.methodCompletionIndicator = methodCompletionIndicator;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("method_url")
    public Optional<String> getMethodUrl() {
        return methodUrl;
    }

    @JsonProperty("method_completion_indicator")
    public Optional<String> getMethodCompletionIndicator() {
        return methodCompletionIndicator;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ThreeDsMethod && equalTo((ThreeDsMethod) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ThreeDsMethod other) {
        return methodUrl.equals(other.methodUrl) && methodCompletionIndicator.equals(other.methodCompletionIndicator);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.methodUrl, this.methodCompletionIndicator);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> methodUrl = Optional.empty();

        private Optional<String> methodCompletionIndicator = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(ThreeDsMethod other) {
            methodUrl(other.getMethodUrl());
            methodCompletionIndicator(other.getMethodCompletionIndicator());
            return this;
        }

        @JsonSetter(value = "method_url", nulls = Nulls.SKIP)
        public Builder methodUrl(Optional<String> methodUrl) {
            this.methodUrl = methodUrl;
            return this;
        }

        public Builder methodUrl(String methodUrl) {
            this.methodUrl = Optional.ofNullable(methodUrl);
            return this;
        }

        @JsonSetter(value = "method_completion_indicator", nulls = Nulls.SKIP)
        public Builder methodCompletionIndicator(Optional<String> methodCompletionIndicator) {
            this.methodCompletionIndicator = methodCompletionIndicator;
            return this;
        }

        public Builder methodCompletionIndicator(String methodCompletionIndicator) {
            this.methodCompletionIndicator = Optional.ofNullable(methodCompletionIndicator);
            return this;
        }

        public ThreeDsMethod build() {
            return new ThreeDsMethod(methodUrl, methodCompletionIndicator, additionalProperties);
        }
    }
}
