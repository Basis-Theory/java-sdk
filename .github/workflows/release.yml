name: Release

on:
  push:
    branches: [master]

jobs:
  tag:
    name: Tag repo
    runs-on: ubuntu-latest
    environment: PROD
    permissions:
      contents: write
      packages: write
    steps:
#      - name: Start Deploy Message
#        uses: Basis-Theory/github-actions/deploy-slack-action@master
#        with:
#          slack-api-token: ${{ secrets.SLACK_DUCKBOT_API_KEY }}
#          channel: ${{ vars.SLACK_DUCKBOT_PRODUCT_DEPLOY_CHANNEL }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.SEMANTIC_RELEASE_PAT }}

      - name: Set up Java
        id: setup-jre
        uses: actions/setup-java@v1
        with:
          java-version: "11"
          architecture: x64

      - name: Bump version and push tag
        id: tag-version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: false
          tag_prefix: ""

      - name: Publish to GH Packages
        if: ${{ steps.tag-version.outputs.new_tag != '' }}
        run: |
          ./gradlew compileJava publish -Pversion="${{ steps.tag-version.outputs.new_tag }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit files
        if: ${{ steps.tag-version.outputs.release_type != '' }}
        run: |
          git config --local user.email "platform@basistheory.com"
          git config --local user.name "github-actions[bot]"

          echo "${{ steps.tag-version.outputs.changelog }}" | cat - CHANGELOG.md > temp && mv temp CHANGELOG.md

          git add CHANGELOG.md README.md
          git commit -m "chore(release): updating version and changelog ${{ steps.tag-version.outputs.new_tag }} [skip ci]" || echo "Nothing to update"

      - name: Push changes
        uses: ad-m/github-push-action@master
        if: ${{ steps.tag-version.outputs.release_type != '' }}
        with:
          github_token: ${{ secrets.SEMANTIC_RELEASE_PAT }}
          branch: ${{ github.ref }}

#      - name: Stop Deploy Message
#        if: always()
#        uses: Basis-Theory/github-actions/deploy-slack-action@master
#        with:
#          slack-api-token: ${{ secrets.SLACK_DUCKBOT_API_KEY }}
#          channel: ${{ vars.SLACK_DUCKBOT_PRODUCT_DEPLOY_CHANNEL }}
#          status: "done"
